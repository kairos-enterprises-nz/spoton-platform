# Generated by Django 4.2.5 on 2025-08-16 01:53

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import secrets
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text="Keycloak subject identifier (sub claim)",
                        max_length=64,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "keycloak_client_id",
                    models.CharField(
                        blank=True,
                        help_text="Keycloak client ID for tenant context",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "preferred_tenant_slug",
                    models.CharField(
                        blank=True,
                        help_text="User's preferred tenant slug",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "app_preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="User preferences specific to this application",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_keycloak_sync",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time Keycloak data was synced",
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users_user",
            },
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=6)),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("signup", "Signup"),
                            ("login", "Login"),
                            ("password_reset", "Password Reset"),
                        ],
                        default="signup",
                        max_length=50,
                    ),
                ),
                ("is_used", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
            ],
            options={
                "db_table": "users_otp",
            },
        ),
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Utility company name", max_length=100),
                ),
                (
                    "slug",
                    models.SlugField(help_text="URL-safe identifier", unique=True),
                ),
                (
                    "subdomain",
                    models.CharField(
                        help_text="Subdomain for this tenant",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "keycloak_client_id_uat",
                    models.CharField(
                        blank=True,
                        default="customer-uat-portal",
                        help_text="Keycloak client ID for UAT environment",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "keycloak_client_id_live",
                    models.CharField(
                        blank=True,
                        default="customer-live-portal",
                        help_text="Keycloak client ID for Live environment",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "is_primary_brand",
                    models.BooleanField(
                        default=False, help_text="True if this is the main SpotOn brand"
                    ),
                ),
                (
                    "primary_domain",
                    models.CharField(
                        blank=True,
                        help_text="Primary domain for this tenant (e.g., brand.spoton.co.nz)",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "additional_domains",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Additional domains for this tenant",
                    ),
                ),
                (
                    "branding_config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="React app branding configuration",
                    ),
                ),
                (
                    "business_number",
                    models.CharField(
                        blank=True,
                        help_text="Business registration number",
                        max_length=50,
                    ),
                ),
                (
                    "tax_number",
                    models.CharField(
                        blank=True, help_text="Tax identification number", max_length=50
                    ),
                ),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("address", models.TextField(blank=True)),
                (
                    "timezone",
                    models.CharField(default="Pacific/Auckland", max_length=50),
                ),
                ("currency", models.CharField(default="NZD", max_length=3)),
                (
                    "service_limits",
                    models.JSONField(
                        default=dict,
                        help_text="Service limits per user type (e.g., {'power': 3, 'broadband': 2})",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "users_tenant",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserChangeLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "field_changed",
                    models.CharField(
                        choices=[("email", "Email"), ("mobile", "Mobile")],
                        max_length=50,
                    ),
                ),
                ("old_value", models.CharField(max_length=255)),
                ("new_value", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="changed_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="change_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_userchangelog",
            },
        ),
        migrations.CreateModel(
            name="OnboardingProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_step",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("step_data", models.JSONField(blank=True, default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="onboarding_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "web_support_onboardingprogress",
            },
        ),
        migrations.CreateModel(
            name="APIToken",
            fields=[
                (
                    "key",
                    models.CharField(
                        default=secrets.token_hex,
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_token",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("address_line1", models.CharField(max_length=100)),
                ("address_line2", models.CharField(blank=True, max_length=100)),
                ("suburb", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("region", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="New Zealand", max_length=100)),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("service", "Service Address"),
                            ("billing", "Billing Address"),
                            ("postal", "Postal Address"),
                            ("legal", "Legal Address"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_addresses",
                        to="users.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "users_address",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_number", models.CharField(max_length=50, unique=True)),
                (
                    "account_number_int",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("residential", "Residential"),
                            ("commercial", "Commercial"),
                            ("industrial", "Industrial"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("bi_monthly", "Bi-Monthly"),
                            ("annual", "Annual"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "billing_day",
                    models.IntegerField(
                        default=1, help_text="Day of month for billing"
                    ),
                ),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "billing_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="billing_accounts",
                        to="users.address",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accounts_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to="users.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "users_account",
            },
        ),
        migrations.CreateModel(
            name="UserTenantRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("staff", "Staff"),
                            ("customer", "Customer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_usertenantrole",
                "indexes": [
                    models.Index(
                        fields=["tenant", "role"], name="users_usert_tenant__d3f203_idx"
                    )
                ],
                "unique_together": {("tenant", "user", "role")},
            },
        ),
        migrations.CreateModel(
            name="UserServiceContract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valid_from",
                    models.DateField(db_index=True, default=datetime.date.today),
                ),
                ("valid_to", models.DateField(blank=True, db_index=True, null=True)),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("user", "User Input"),
                            ("import", "Data Import"),
                            ("api", "API Integration"),
                            ("admin", "Admin Override"),
                            ("system", "System Generated"),
                            ("migration", "Data Migration"),
                        ],
                        default="user",
                        max_length=50,
                    ),
                ),
                (
                    "updated_reason",
                    models.CharField(blank=True, editable=False, max_length=255),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("power", "Electricity"),
                            ("broadband", "Broadband Internet"),
                            ("mobile", "Mobile Service"),
                        ],
                        max_length=20,
                    ),
                ),
                ("connection_id", models.CharField(max_length=100)),
                ("contract_name", models.CharField(max_length=100)),
                ("contract_terms", models.TextField()),
                ("signed_at", models.DateField()),
                ("is_signed", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.tenant",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_userservicecontract",
                "indexes": [
                    models.Index(
                        fields=["tenant", "user", "service_type"],
                        name="users_users_tenant__b1cb4f_idx",
                    ),
                    models.Index(
                        fields=["connection_id"], name="users_users_connect_c54949_idx"
                    ),
                ],
                "unique_together": {("tenant", "user", "connection_id", "valid_from")},
            },
        ),
        migrations.CreateModel(
            name="UserAccountRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("primary", "Primary User"),
                            ("owner", "Owner"),
                            ("authorized", "Authorized User"),
                            ("viewer", "Viewer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("can_manage_services", models.BooleanField(default=False)),
                ("can_manage_users", models.BooleanField(default=False)),
                ("can_manage_billing", models.BooleanField(default=False)),
                ("can_view_usage", models.BooleanField(default=True)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="users.account",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="account_roles_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_useraccountrole",
                "indexes": [
                    models.Index(
                        fields=["tenant", "account", "role"],
                        name="users_usera_tenant__49d62a_idx",
                    ),
                    models.Index(
                        fields=["user", "role"], name="users_usera_user_id_505d8f_idx"
                    ),
                    models.Index(
                        fields=["valid_from", "valid_to"],
                        name="users_usera_valid_f_92d985_idx",
                    ),
                ],
                "unique_together": {("user", "account", "role", "valid_from")},
            },
        ),
        migrations.CreateModel(
            name="TenantUserRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("staff", "Staff Member"),
                            ("admin", "Tenant Administrator"),
                            ("billing_manager", "Billing Manager"),
                            ("support", "Support Representative"),
                            ("viewer", "Read-Only Access"),
                        ],
                        max_length=20,
                    ),
                ),
                ("can_manage_users", models.BooleanField(default=False)),
                ("can_modify_settings", models.BooleanField(default=False)),
                ("can_access_billing", models.BooleanField(default=False)),
                ("can_access_metering", models.BooleanField(default=False)),
                ("can_manage_contracts", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="users.tenant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenant_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_tenantuserrole",
                "indexes": [
                    models.Index(
                        fields=["tenant", "user"], name="users_tenan_tenant__d60e2c_idx"
                    ),
                    models.Index(fields=["role"], name="users_tenan_role_2ba7d5_idx"),
                ],
                "unique_together": {("tenant", "user", "role")},
            },
        ),
        migrations.AddIndex(
            model_name="address",
            index=models.Index(
                fields=["tenant"], name="users_addre_tenant__ec5c85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="address",
            index=models.Index(
                fields=["postal_code"], name="users_addre_postal__bd26be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["tenant", "account_number"],
                name="users_accou_tenant__0ff753_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["account_type"], name="users_accou_account_d5178f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(fields=["status"], name="users_accou_status_b29037_idx"),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["valid_from", "valid_to"], name="users_accou_valid_f_9e51db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["preferred_tenant_slug"], name="users_user_preferr_f698b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["is_active"], name="users_user_is_acti_ddda02_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["last_keycloak_sync"], name="users_user_last_ke_a340cd_idx"
            ),
        ),
    ]
