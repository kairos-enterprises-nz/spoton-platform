# Generated by Django 4.2.5 on 2025-08-16 01:53

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CustomerPricing",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "custom_base_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "custom_monthly_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("custom_pricing_rules", models.JSONField(blank=True, default=dict)),
                ("effective_from", models.DateTimeField()),
                ("effective_to", models.DateTimeField(blank=True, null=True)),
                ("approval_date", models.DateTimeField(blank=True, null=True)),
                ("approval_reason", models.TextField(blank=True)),
            ],
            options={
                "db_table": "finance_customerpricing",
            },
        ),
        migrations.CreateModel(
            name="CustomerTariffOverride",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("override_name", models.CharField(max_length=200)),
                ("override_reason", models.TextField()),
                (
                    "custom_base_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Override base rate",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "custom_daily_charge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Override daily charge",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "custom_demand_charge",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Override demand charge",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Discount percentage (negative for markup)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(-100),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "monthly_credit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Fixed monthly credit (negative for charge)",
                        max_digits=8,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "override_details",
                    models.JSONField(
                        default=dict,
                        help_text="Additional override configuration and notes",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PriceBlock",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "unit_rate",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Price per unit (cents per kWh, dollars per GB, etc.)",
                        max_digits=10,
                    ),
                ),
                ("tier_number", models.PositiveIntegerField(default=1)),
                (
                    "tier_threshold_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum usage for this tier",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "tier_threshold_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum usage for this tier",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "block_size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Size of pricing block (kW, kVA, etc.)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "loss_factor",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("1.0000"),
                        help_text="Loss factor multiplier",
                        max_digits=6,
                    ),
                ),
                (
                    "price_adjustment",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Additional price adjustment (+ or -)",
                        max_digits=8,
                    ),
                ),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("description", models.CharField(blank=True, max_length=200)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Additional pricing configuration"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["tier_number", "tier_threshold_min"],
            },
        ),
        migrations.CreateModel(
            name="PriceCalculation",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("usage_data", models.JSONField(blank=True, default=dict)),
                (
                    "base_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "usage_charges",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("calculation_details", models.JSONField(blank=True, default=dict)),
                ("applied_rules", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "finance_pricecalculation",
            },
        ),
        migrations.CreateModel(
            name="PricingRule",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rule_name", models.CharField(max_length=200)),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("usage_based", "Usage Based"),
                            ("time_based", "Time Based"),
                            ("volume_discount", "Volume Discount"),
                            ("loyalty_discount", "Loyalty Discount"),
                            ("promotional", "Promotional"),
                            ("peak_pricing", "Peak Pricing"),
                            ("off_peak_pricing", "Off Peak Pricing"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "calculation_method",
                    models.CharField(
                        choices=[
                            ("fixed", "Fixed Amount"),
                            ("percentage", "Percentage"),
                            ("per_unit", "Per Unit"),
                            ("tiered", "Tiered"),
                        ],
                        max_length=15,
                    ),
                ),
                ("rate_value", models.DecimalField(decimal_places=6, max_digits=12)),
                ("unit", models.CharField(default="each", max_length=20)),
                (
                    "min_usage",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "max_usage",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("time_start", models.TimeField(blank=True, null=True)),
                ("time_end", models.TimeField(blank=True, null=True)),
                ("days_of_week", models.JSONField(blank=True, default=list)),
                ("months", models.JSONField(blank=True, default=list)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("priority", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "finance_pricingrule",
                "ordering": ["priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServicePlan",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plan_code", models.CharField(db_index=True, max_length=50)),
                ("plan_name", models.CharField(max_length=200)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("electricity", "Electricity"),
                            ("gas", "Gas"),
                            ("broadband", "Broadband"),
                            ("mobile", "Mobile"),
                            ("bundle", "Multi-Service Bundle"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("prepaid", "Prepaid"),
                            ("postpaid", "Postpaid"),
                            ("fixed", "Fixed Rate"),
                            ("variable", "Variable Rate"),
                            ("tiered", "Tiered Pricing"),
                            ("unlimited", "Unlimited"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=500)),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "setup_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "monthly_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "service_config",
                    models.JSONField(
                        blank=True, default=dict, help_text="Service-specific settings"
                    ),
                ),
                (
                    "pricing_tiers",
                    models.JSONField(
                        blank=True, default=list, help_text="Tiered pricing structure"
                    ),
                ),
                ("minimum_term_months", models.IntegerField(default=0)),
                (
                    "early_termination_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("discontinued", "Discontinued"),
                        ],
                        default="draft",
                        max_length=15,
                    ),
                ),
                ("available_from", models.DateTimeField()),
                ("available_to", models.DateTimeField(blank=True, null=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_promotional", models.BooleanField(default=False)),
                (
                    "promotional_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("promotional_end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "is_shared_across_brands",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this plan is shared across all tenant brands",
                    ),
                ),
            ],
            options={
                "db_table": "finance_serviceplan",
            },
        ),
        migrations.CreateModel(
            name="Tariff",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tariff_code", models.CharField(max_length=50, unique=True)),
                ("tariff_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "tariff_type",
                    models.CharField(
                        choices=[
                            ("tou", "Time of Use"),
                            ("fixed", "Fixed Rate"),
                            ("spot", "Spot Price"),
                            ("ci", "Commercial & Industrial"),
                            ("prepaid", "Prepaid"),
                            ("demand", "Demand Based"),
                            ("tiered", "Tiered/Block Rate"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("electricity", "Electricity"),
                            ("broadband", "Broadband"),
                            ("mobile", "Mobile"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "base_rate",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Base rate per unit (kWh, GB, minute)",
                        max_digits=10,
                    ),
                ),
                (
                    "daily_charge",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="Fixed daily charge",
                        max_digits=8,
                    ),
                ),
                (
                    "demand_charge",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Demand charge per kVA or kW",
                        max_digits=10,
                    ),
                ),
                (
                    "network_charge",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Network/distribution charge",
                        max_digits=8,
                    ),
                ),
                (
                    "regulatory_charge",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Regulatory/compliance charge",
                        max_digits=8,
                    ),
                ),
                (
                    "gst_rate",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.1500"),
                        help_text="GST rate as decimal (0.15 = 15%)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                (
                    "min_consumption",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum monthly consumption requirement",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "max_consumption",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum monthly consumption limit",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eligible_customer_types",
                    models.JSONField(
                        default=list, help_text="List of eligible customer types"
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Additional tariff configuration and parameters",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="TariffProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("profile_name", models.CharField(max_length=100)),
                ("profile_code", models.CharField(max_length=20)),
                (
                    "day_type",
                    models.CharField(
                        choices=[
                            ("weekday", "Weekday"),
                            ("weekend", "Weekend"),
                            ("holiday", "Public Holiday"),
                            ("special", "Special Event Day"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "block_type",
                    models.CharField(
                        choices=[
                            ("peak", "Peak"),
                            ("shoulder", "Shoulder"),
                            ("off_peak", "Off Peak"),
                            ("controlled", "Controlled Load"),
                            ("uncontrolled", "Uncontrolled Load"),
                            ("night", "Night Rate"),
                            ("super_off_peak", "Super Off Peak"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "season",
                    models.CharField(
                        choices=[
                            ("all", "All Year"),
                            ("summer", "Summer"),
                            ("winter", "Winter"),
                            ("spring", "Spring"),
                            ("autumn", "Autumn"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
                ("season_start", models.DateField(blank=True, null=True)),
                ("season_end", models.DateField(blank=True, null=True)),
                ("priority", models.PositiveIntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tariff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profiles",
                        to="pricing.tariff",
                    ),
                ),
            ],
            options={
                "ordering": ["day_type", "start_time", "priority"],
            },
        ),
    ]
