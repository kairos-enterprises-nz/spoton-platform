# Generated by Django 4.2.5 on 2025-08-16 01:53

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExportLog",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "export_type",
                    models.CharField(
                        choices=[
                            ("eiep1a", "EIEP-1A Daily Consumption"),
                            ("eiep1b", "EIEP-1B Interval Data"),
                            ("eiep3", "EIEP-3 Registry Data"),
                            ("eiep13", "EIEP-13 Network Billing"),
                            ("gr010", "GR-010 Reconciliation"),
                            ("gr020", "GR-020 Washing Machine"),
                            ("custom", "Custom Export"),
                        ],
                        help_text="Type of export operation",
                        max_length=30,
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                (
                    "file_hash",
                    models.CharField(
                        blank=True, help_text="SHA-256 hash", max_length=64
                    ),
                ),
                (
                    "data_start_date",
                    models.DateField(help_text="Start date of exported data"),
                ),
                (
                    "data_end_date",
                    models.DateField(help_text="End date of exported data"),
                ),
                ("started_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("transmitted", "Transmitted"),
                            ("acknowledged", "Acknowledged"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("total_records", models.IntegerField(default=0)),
                ("exported_records", models.IntegerField(default=0)),
                ("error_records", models.IntegerField(default=0)),
                (
                    "recipient",
                    models.CharField(
                        blank=True, help_text="Export recipient", max_length=100
                    ),
                ),
                (
                    "transmission_method",
                    models.CharField(
                        choices=[
                            ("sftp", "SFTP"),
                            ("email", "Email"),
                            ("api", "API"),
                            ("manual", "Manual Download"),
                        ],
                        default="sftp",
                        max_length=20,
                    ),
                ),
                ("transmission_timestamp", models.DateTimeField(blank=True, null=True)),
                ("error_details", models.JSONField(blank=True, default=list)),
                ("retry_count", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "energy_exportlog",
            },
        ),
        migrations.CreateModel(
            name="MarketSubmission",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "submission_id",
                    models.CharField(
                        help_text="Unique submission identifier",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "submission_type",
                    models.CharField(
                        choices=[
                            ("eiep1a", "EIEP-1A"),
                            ("eiep1b", "EIEP-1B"),
                            ("eiep3", "EIEP-3"),
                            ("eiep13", "EIEP-13"),
                            ("gr010", "GR-010"),
                            ("gr020", "GR-020"),
                            ("other", "Other"),
                        ],
                        help_text="Type of market submission",
                        max_length=20,
                    ),
                ),
                (
                    "reporting_period_start",
                    models.DateField(help_text="Start of reporting period"),
                ),
                (
                    "reporting_period_end",
                    models.DateField(help_text="End of reporting period"),
                ),
                ("due_date", models.DateTimeField(help_text="Submission due date")),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "participant_code",
                    models.CharField(
                        help_text="Market participant code", max_length=20
                    ),
                ),
                (
                    "trader_code",
                    models.CharField(
                        blank=True, help_text="Trader code if different", max_length=20
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                (
                    "record_count",
                    models.IntegerField(
                        default=0, help_text="Number of records in submission"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("preparing", "Preparing"),
                            ("ready", "Ready"),
                            ("submitted", "Submitted"),
                            ("processing", "Processing"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("acknowledged", "Acknowledged"),
                        ],
                        default="preparing",
                        max_length=20,
                    ),
                ),
                ("acknowledgment_received", models.BooleanField(default=False)),
                (
                    "acknowledgment_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("rejection_reason", models.TextField(blank=True)),
                ("processing_errors", models.JSONField(blank=True, default=list)),
                ("processing_warnings", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "energy_marketsubmission",
            },
        ),
        migrations.CreateModel(
            name="ReconciliationSubmission",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "submission_type",
                    models.CharField(
                        choices=[
                            ("initial", "Initial Submission"),
                            ("revision", "Revision"),
                            ("final", "Final Submission"),
                            ("washup", "Wash-up"),
                        ],
                        help_text="Type of reconciliation submission",
                        max_length=20,
                    ),
                ),
                ("trading_date", models.DateField(help_text="Trading date")),
                (
                    "trading_period",
                    models.IntegerField(help_text="Trading period (1-48)"),
                ),
                (
                    "participant_code",
                    models.CharField(
                        help_text="Market participant code", max_length=20
                    ),
                ),
                (
                    "reconciliation_type",
                    models.CharField(
                        choices=[
                            ("generation", "Generation"),
                            ("load", "Load"),
                            ("both", "Generation and Load"),
                        ],
                        default="load",
                        max_length=20,
                    ),
                ),
                (
                    "total_volume",
                    models.DecimalField(
                        decimal_places=4, help_text="Total volume in MWh", max_digits=15
                    ),
                ),
                (
                    "connection_count",
                    models.IntegerField(help_text="Number of connections included"),
                ),
                (
                    "submission_deadline",
                    models.DateTimeField(help_text="Deadline for this submission"),
                ),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("ready", "Ready for Submission"),
                            ("submitted", "Submitted"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("revised", "Revised"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("submission_file", models.CharField(blank=True, max_length=255)),
                ("response_file", models.CharField(blank=True, max_length=255)),
                ("market_response_code", models.CharField(blank=True, max_length=10)),
                ("market_response_message", models.TextField(blank=True)),
                (
                    "market_response_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("validation_errors", models.JSONField(blank=True, default=list)),
                ("validation_warnings", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "energy_reconciliationsubmission",
            },
        ),
    ]
