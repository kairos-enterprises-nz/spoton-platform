# Generated by Django 4.2.5 on 2025-08-16 01:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("metering", "0001_initial"),
        ("users", "0001_initial"),
        ("connections", "0002_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="register",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meterrawinterval",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meterrawdaily",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meteringpoint",
            name="connection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metering_points",
                to="connections.connection",
            ),
        ),
        migrations.AddField(
            model_name="meteringpoint",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meteringauditlog",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="metercalcinterval",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="metercalcdaily",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meteraggregatemonthly",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddField(
            model_name="meteraggregatedaily",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="users.tenant"
            ),
        ),
        migrations.AddIndex(
            model_name="register",
            index=models.Index(
                fields=["tenant", "metering_point"],
                name="metering_re_tenant__b26387_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="register",
            index=models.Index(
                fields=["register_code"], name="metering_re_registe_6c957c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawinterval",
            index=models.Index(
                fields=["tenant", "icp_id", "read_at"],
                name="metering_ra_tenant__a7d502_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawinterval",
            index=models.Index(
                fields=["icp_id", "register_code", "read_at"],
                name="metering_ra_icp_id_21e0a1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawinterval",
            index=models.Index(
                fields=["import_batch_id"], name="metering_ra_import__4878f8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawinterval",
            index=models.Index(
                fields=["imported_at"], name="metering_ra_importe_d8ff53_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="meterrawinterval",
            unique_together={
                ("tenant", "icp_id", "register_code", "read_at", "source_file_id")
            },
        ),
        migrations.AddIndex(
            model_name="meterrawdaily",
            index=models.Index(
                fields=["tenant", "icp_id", "read_date"],
                name="metering_ra_tenant__6635d3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawdaily",
            index=models.Index(
                fields=["icp_id", "register_code", "read_date"],
                name="metering_ra_icp_id_6b0ccc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawdaily",
            index=models.Index(
                fields=["import_batch_id"], name="metering_ra_import__545983_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meterrawdaily",
            index=models.Index(
                fields=["imported_at"], name="metering_ra_importe_3ceec5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="meterrawdaily",
            unique_together={
                ("tenant", "icp_id", "register_code", "read_date", "source_file_id")
            },
        ),
        migrations.AddIndex(
            model_name="meteringpoint",
            index=models.Index(
                fields=["tenant", "connection"], name="metering_me_tenant__923655_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteringpoint",
            index=models.Index(
                fields=["meter_number"], name="metering_me_meter_n_dd4366_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteringpoint",
            index=models.Index(
                fields=["meter_type", "status"], name="metering_me_meter_t_3184fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteringpoint",
            index=models.Index(
                fields=["valid_from", "valid_to"], name="metering_me_valid_f_b404a8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="meteringpoint",
            unique_together={("tenant", "meter_number")},
        ),
        migrations.AddIndex(
            model_name="meteringauditlog",
            index=models.Index(
                fields=["tenant", "process_name", "created_at"],
                name="energy_mete_tenant__8d535d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meteringauditlog",
            index=models.Index(
                fields=["source_system", "status"],
                name="energy_mete_source__0868a6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meteringauditlog",
            index=models.Index(
                fields=["start_time", "end_time"], name="energy_mete_start_t_3c4d75_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteringauditlog",
            index=models.Index(
                fields=["created_at"], name="energy_mete_created_3a95be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(
                fields=["tenant", "icp_id", "read_at"],
                name="metering_ca_tenant__e409c2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(
                fields=["icp_id", "register_code", "read_at"],
                name="metering_ca_icp_id_88c379_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(fields=["status"], name="metering_ca_status_61977c_idx"),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(
                fields=["is_estimated"], name="metering_ca_is_esti_342da1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(
                fields=["validation_batch_id"], name="metering_ca_validat_f2b5a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcinterval",
            index=models.Index(
                fields=["validated_at"], name="metering_ca_validat_de6800_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="metercalcinterval",
            unique_together={("tenant", "icp_id", "register_code", "read_at")},
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(
                fields=["tenant", "icp_id", "read_date"],
                name="metering_ca_tenant__9629f8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(
                fields=["icp_id", "register_code", "read_date"],
                name="metering_ca_icp_id_8ed674_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(fields=["status"], name="metering_ca_status_542290_idx"),
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(
                fields=["is_estimated"], name="metering_ca_is_esti_05c090_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(
                fields=["validation_batch_id"], name="metering_ca_validat_81b226_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metercalcdaily",
            index=models.Index(
                fields=["validated_at"], name="metering_ca_validat_21878d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="metercalcdaily",
            unique_together={("tenant", "icp_id", "register_code", "read_date")},
        ),
        migrations.AddIndex(
            model_name="meteraggregatemonthly",
            index=models.Index(
                fields=["tenant", "icp_id", "year", "month"],
                name="metering_ag_tenant__52d4a9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatemonthly",
            index=models.Index(
                fields=["year", "month"], name="metering_ag_year_96030f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatemonthly",
            index=models.Index(
                fields=["has_estimates"], name="metering_ag_has_est_931b4f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatemonthly",
            index=models.Index(
                fields=["is_complete"], name="metering_ag_is_comp_b7a2e7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="meteraggregatemonthly",
            unique_together={("tenant", "icp_id", "year", "month")},
        ),
        migrations.AddIndex(
            model_name="meteraggregatedaily",
            index=models.Index(
                fields=["tenant", "icp_id", "aggregate_date"],
                name="metering_ag_tenant__c5588a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatedaily",
            index=models.Index(
                fields=["aggregate_date"], name="metering_ag_aggrega_f423b7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatedaily",
            index=models.Index(
                fields=["has_estimates"], name="metering_ag_has_est_c22647_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="meteraggregatedaily",
            index=models.Index(
                fields=["is_complete"], name="metering_ag_is_comp_589235_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="meteraggregatedaily",
            unique_together={("tenant", "icp_id", "aggregate_date")},
        ),
    ]
